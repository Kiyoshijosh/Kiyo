-- Enhanced ShiftLock UI without tooltip and with larger UI
local ref = cloneref or function(x) return x end
local S = function(n) return ref(game:GetService(n)) end

local Plrs, Tw, UIS, RS, Wk, CG, TS, HS, LPS =
    S("Players"), S("TweenService"), S("UserInputService"), S("RunService"), S("Workspace"), S("CoreGui"),
    S("TextService"), S("HttpService"), S("Lighting")

local plr = Plrs.LocalPlayer
local mouse = plr:GetMouse()

-- Configuration with larger sizes
local CONFIG = {
    ButtonSize = 80,  -- Increased from 64
    ButtonPosition = UDim2.new(1, -110, 1, -110),  -- Adjusted for larger size
    ButtonColor = Color3.fromRGB(34, 34, 38),
    ButtonActiveColor = Color3.fromRGB(38, 48, 60),
    StrokeColor = Color3.fromRGB(0, 140, 255),
    StrokeActiveColor = Color3.fromRGB(0, 200, 255),
    IconColor = Color3.fromRGB(255, 255, 255),
    IconActiveColor = Color3.fromRGB(0, 200, 255),
    ShadowOffset = 8,  -- Increased from 6
    PulseEffect = true,
    ShineEffect = true,
    Draggable = true,
    AutoHide = false,
    HideDelay = 5,
    ShowOnHover = true,
    CustomKeybind = Enum.KeyCode.LeftShift,
    SavePosition = true
}

-- Load saved position if available
local function loadSettings()
    if not CONFIG.SavePosition then return end
    
    local success, data = pcall(function()
        return HS:JSONDecode(plr:GetAttribute("ShiftLockUIPosition") or "{}")
    end)
    
    if success and data then
        CONFIG.ButtonPosition = UDim2.new(data.XScale or 1, data.XOffset or -110, data.YScale or 1, data.YOffset or -110)
    end
end

-- Save position for future sessions
local function saveSettings()
    if not CONFIG.SavePosition then return end
    
    pcall(function()
        plr:SetAttribute("ShiftLockUIPosition", HS:JSONEncode({
            XScale = btn.Position.X.Scale,
            XOffset = btn.Position.X.Offset,
            YScale = btn.Position.Y.Scale,
            YOffset = btn.Position.Y.Offset
        }))
    end)
end

-- Utility functions
local function NA(i)
    if not i then return end
    i.Name = "\0"
    i.Archivable = false
end

local function parentUI(g)
    if gethui then
        NA(g); g.Parent = gethui(); return g
    elseif CG and CG:FindFirstChild("RobloxGui") then
        NA(g); g.Parent = CG:FindFirstChild("RobloxGui"); return g
    elseif CG then
        NA(g); g.Parent = CG; return g
    elseif plr and plr:FindFirstChildWhichIsA("PlayerGui") then
        NA(g); g.Parent = plr:FindFirstChildWhichIsA("PlayerGui"); g.ResetOnSpawn = false; return g
    end
    return g
end

local function getParts()
    local c = plr.Character or plr.CharacterAdded:Wait()
    local hum, hrp
    for _, d in ipairs(c:GetDescendants()) do
        if not hum and d:IsA("Humanoid") then hum = d end
        if not hrp and d:IsA("BasePart") and d.Name == "HumanoidRootPart" then hrp = d end
        if hum and hrp then break end
    end
    hum = hum or c:WaitForChild("Humanoid")
    hrp = hrp or c:WaitForChild("HumanoidRootPart")
    return c, hum, hrp
end

local function lockMouse(v)
    if UIS.MouseEnabled then
        UIS.MouseBehavior = v and Enum.MouseBehavior.LockCenter or Enum.MouseBehavior.Default
    end
end

local rotCon, oldAR
local function faceCam(h, hrp, v)
    if rotCon then rotCon:Disconnect() rotCon = nil end
    if v then
        oldAR = h.AutoRotate
        h.AutoRotate = false
        rotCon = RS.RenderStepped:Connect(function()
            local cam = Wk.CurrentCamera
            if not (hrp and cam) then return end
            local lv = cam.CFrame.LookVector
            local flat = Vector3.new(lv.X, 0, lv.Z)
            if flat.Magnitude > 1e-4 then
                hrp.CFrame = CFrame.lookAt(hrp.Position, hrp.Position + flat.Unit, Vector3.yAxis)
            end
        end)
    else
        if oldAR ~= nil then h.AutoRotate = oldAR end
    end
end

local function reapply(v)
    task.defer(function()
        local _, h, r = getParts()
        lockMouse(v)
        faceCam(h, r, v)
    end)
end

-- UI Creation
local gui = Instance.new("ScreenGui")
gui.Name = "ShiftLockUI"
gui.ResetOnSpawn = false
gui.IgnoreGuiInset = true
gui.ZIndexBehavior = Enum.ZIndexBehavior.Global
gui.DisplayOrder = 10000
parentUI(gui)

-- Load saved position
loadSettings()

-- Main button (larger size)
local btn = Instance.new("ImageButton")
btn.Name = "LockBtn"
btn.AnchorPoint = Vector2.new(0.5, 0.5)
btn.Size = UDim2.fromOffset(CONFIG.ButtonSize, CONFIG.ButtonSize)
btn.Position = CONFIG.ButtonPosition
btn.BackgroundColor3 = CONFIG.ButtonColor
btn.AutoButtonColor = false
btn.Image = ""
btn.Active = true
btn.Parent = gui

local cr = Instance.new("UICorner")
cr.CornerRadius = UDim.new(1, 0)
cr.Parent = btn

local strk = Instance.new("UIStroke")
strk.Thickness = 3  -- Increased from 2
strk.Color = CONFIG.StrokeColor
strk.Transparency = 0.25
strk.Parent = btn

local grd = Instance.new("UIGradient")
grd.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(45, 45, 50)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(27, 27, 30))
}
grd.Rotation = 45
grd.Parent = btn

-- Larger icon
local icn = Instance.new("ImageLabel")
icn.Name = "Icn"
icn.BackgroundTransparency = 1
icn.AnchorPoint = Vector2.new(0.5, 0.5)
icn.Position = UDim2.fromScale(0.5, 0.5)
icn.Size = UDim2.fromScale(0.7, 0.7)  -- Increased from 0.62
icn.Image = "rbxasset://textures/ui/mouseLock_off.png"
icn.ImageColor3 = CONFIG.IconColor
icn.ScaleType = Enum.ScaleType.Fit
icn.Parent = btn

-- Larger shadow effect
local shd = Instance.new("Frame")
shd.Name = "Shd"
shd.AnchorPoint = Vector2.new(0.5, 0.5)
shd.Position = UDim2.new(btn.Position.X.Scale, btn.Position.X.Offset, btn.Position.Y.Scale, btn.Position.Y.Offset + CONFIG.ShadowOffset)
shd.Size = UDim2.new(btn.Size.X.Scale, btn.Size.X.Offset + 16, btn.Size.Y.Scale, btn.Size.Y.Offset + 16)  -- Increased from +12
shd.BackgroundColor3 = Color3.new(0, 0, 0)
shd.BackgroundTransparency = 0.8
shd.ZIndex = 0
shd.Parent = gui

local shdC = Instance.new("UICorner")
shdC.CornerRadius = UDim.new(1, 0)
shdC.Parent = shd

-- Settings button (larger)
local settingsBtn = Instance.new("TextButton")
settingsBtn.Name = "Settings"
settingsBtn.AnchorPoint = Vector2.new(0, 0)
settingsBtn.Position = UDim2.new(0, -8, 0, -8)  -- Adjusted position
settingsBtn.Size = UDim2.fromOffset(22, 22)  -- Increased from 18
settingsBtn.BackgroundColor3 = Color3.fromRGB(100, 100, 110)
settingsBtn.AutoButtonColor = true
settingsBtn.Text = "âš™"
settingsBtn.TextScaled = true
settingsBtn.TextColor3 = Color3.new(1, 1, 1)
settingsBtn.Visible = false
settingsBtn.Parent = btn

local settingsC = Instance.new("UICorner")
settingsC.CornerRadius = UDim.new(1, 0)
settingsC.Parent = settingsBtn

local settingsS = Instance.new("UIStroke")
settingsS.Thickness = 1
settingsS.Transparency = 0.3
settingsS.Parent = settingsBtn

-- Scale animation
local sc = Instance.new("UIScale")
sc.Scale = 0.9
sc.Parent = btn
Tw:Create(sc, TweenInfo.new(0.22, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { Scale = 1 }):Play()

-- Tween configurations
local tH = TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
local tP = TweenInfo.new(0.08, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
local tT = TweenInfo.new(0.18, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)
local tLoop = TweenInfo.new(1.2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1, true, 0)

-- Pulse animation for button stroke
Tw:Create(strk, tLoop, { Transparency = 0.4 }):Play()

-- Auto-hide functionality
local autoHideConn
local function setupAutoHide()
    if autoHideConn then autoHideConn:Disconnect() end
    
    if CONFIG.AutoHide then
        local lastInteraction = tick()
        
        autoHideConn = RS.RenderStepped:Connect(function()
            if not CONFIG.AutoHide or not gui or not gui.Parent then return end
            
            local timeSinceLastInteraction = tick() - lastInteraction
            local shouldBeVisible = timeSinceLastInteraction < CONFIG.HideDelay or over
            
            if btn.Visible ~= shouldBeVisible then
                btn.Visible = shouldBeVisible
                shd.Visible = shouldBeVisible
            end
        end)
        
        -- Update last interaction time on any interaction
        local function updateInteraction()
            lastInteraction = tick()
            if not btn.Visible then
                btn.Visible = true
                shd.Visible = true
            end
        end
        
        btn.MouseEnter:Connect(updateInteraction)
        btn.MouseLeave:Connect(updateInteraction)
        btn.MouseButton1Down:Connect(updateInteraction)
        btn.MouseButton1Up:Connect(updateInteraction)
    else
        btn.Visible = true
        shd.Visible = true
    end
end

setupAutoHide()

-- Hover effects
local over = false
btn.MouseEnter:Connect(function()
    over = true
    Tw:Create(btn, tH, { Size = UDim2.fromOffset(CONFIG.ButtonSize + 8, CONFIG.ButtonSize + 8) }):Play()  -- Increased from +6
    settingsBtn.Visible = true
end)

btn.MouseLeave:Connect(function()
    over = false
    Tw:Create(btn, tH, { Size = UDim2.fromOffset(CONFIG.ButtonSize, CONFIG.ButtonSize) }):Play()
    settingsBtn.Visible = false
end)

-- Pulse effect
local function pulse()
    if not CONFIG.PulseEffect then return end
    
    local p = Instance.new("Frame")
    p.Name = "Pulse"
    p.AnchorPoint = Vector2.new(0.5, 0.5)
    p.Position = UDim2.fromScale(0.5, 0.5)
    p.Size = UDim2.fromOffset(0, 0)
    p.BackgroundColor3 = Color3.new(1, 1, 1)
    p.BackgroundTransparency = 0.65
    p.ZIndex = btn.ZIndex + 1
    local pc = Instance.new("UICorner")
    pc.CornerRadius = UDim.new(1, 0)
    pc.Parent = p
    p.Parent = btn
    local m = math.max(btn.AbsoluteSize.X, btn.AbsoluteSize.Y) * 1.15
    Tw:Create(p, TweenInfo.new(0.22, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { Size = UDim2.fromOffset(m, m), BackgroundTransparency = 1 }):Play()
    task.delay(0.24, function() p:Destroy() end)
end

-- Button click effects
btn.MouseButton1Down:Connect(function()
    Tw:Create(btn, tP, { Size = UDim2.fromOffset(CONFIG.ButtonSize - 8, CONFIG.ButtonSize - 8) }):Play()  -- Increased from -6
    Tw:Create(strk, tP, { Thickness = 4, Transparency = 0.1 }):Play()  -- Increased from 3
    pulse()
end)

btn.MouseButton1Up:Connect(function()
    Tw:Create(btn, tP, { Size = over and UDim2.fromOffset(CONFIG.ButtonSize + 8, CONFIG.ButtonSize + 8) or UDim2.fromOffset(CONFIG.ButtonSize, CONFIG.ButtonSize) }):Play()  -- Increased from +6
    Tw:Create(strk, tP, { Thickness = 3, Transparency = 0.25 }):Play()  -- Increased from 2
end)

-- Shine effect
local function shn()
    if not CONFIG.ShineEffect then return end
    
    local s = Instance.new("Frame")
    s.Name = "Shn"
    s.BackgroundTransparency = 1
    s.Size = UDim2.fromScale(1, 1)
    s.ClipsDescendants = true
    s.Parent = btn

    local b = Instance.new("Frame")
    b.AnchorPoint = Vector2.new(0.5, 0.5)
    b.Position = UDim2.fromScale(-0.2, 0.5)
    b.Size = UDim2.new(0, 12, 1.4, 0)  -- Increased from 10
    b.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    b.BackgroundTransparency = 0.85
    local g = Instance.new("UIGradient")
    g.Transparency = NumberSequence.new{
        NumberSequenceKeypoint.new(0, 1),
        NumberSequenceKeypoint.new(0.5, 0.5),
        NumberSequenceKeypoint.new(1, 1)
    }
    g.Rotation = 20
    g.Parent = b
    b.Parent = s

    local tw = Tw:Create(b, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { Position = UDim2.fromScale(1.2, 0.5) })
    tw:Play()
    tw.Completed:Connect(function() s:Destroy() end)
end

-- Dragging functionality
local drag = false
local dStart, pStart

local function clampUD(pos)
    local scr = gui.AbsoluteSize
    local half = btn.AbsoluteSize / 2
    local absX = pos.X.Scale * scr.X + pos.X.Offset
    local absY = pos.Y.Scale * scr.Y + pos.Y.Offset
    local x = math.clamp(absX, half.X + 10, scr.X - half.X - 10)  -- Increased from 8
    local y = math.clamp(absY, half.Y + 10, scr.Y - half.Y - 10)  -- Increased from 8
    return UDim2.new(pos.X.Scale, x - pos.X.Scale * scr.X, pos.Y.Scale, y - pos.Y.Scale * scr.Y)
end

if CONFIG.Draggable then
    btn.InputBegan:Connect(function(i)
        if i.UserInputType == Enum.UserInputType.MouseButton1 or i.UserInputType == Enum.UserInputType.Touch then
            drag = true
            dStart = i.Position
            pStart = btn.Position
            i.Changed:Connect(function()
                if i.UserInputState == Enum.UserInputState.End then
                    drag = false
                    saveSettings()
                end
            end)
        end
    end)

    btn.InputChanged:Connect(function(i)
        if i.UserInputType == Enum.UserInputType.MouseMovement or i.UserInputType == Enum.UserInputType.Touch then
            if drag and dStart and pStart then
                local d = i.Position - dStart
                local np = UDim2.new(pStart.X.Scale, pStart.X.Offset + d.X, pStart.Y.Scale, pStart.Y.Offset + d.Y)
                btn.Position = clampUD(np)
            end
        end
    end)
end

-- Update shadow position to follow button
RS.RenderStepped:Connect(function()
    shd.Position = UDim2.new(btn.Position.X.Scale, btn.Position.X.Offset, btn.Position.Y.Scale, btn.Position.Y.Offset + CONFIG.ShadowOffset)
    shd.Size = UDim2.new(btn.Size.X.Scale, btn.Size.X.Offset + 16, btn.Size.Y.Scale, btn.Size.Y.Offset + 16)  -- Increased from +12
end)

-- Toggle shift lock functionality
local on = false
local icOn, icOff = "rbxasset://textures/ui/mouseLock_on.png", "rbxasset://textures/ui/mouseLock_off.png"

local function apply(v)
    local _, h, r = getParts()
    on = v
    lockMouse(v)
    faceCam(h, r, v)
    Tw:Create(strk, tT, { Color = v and CONFIG.StrokeActiveColor or CONFIG.StrokeColor, Thickness = v and 4 or 3 }):Play()  -- Increased from 3/2
    Tw:Create(btn, tT, { BackgroundColor3 = v and CONFIG.ButtonActiveColor or CONFIG.ButtonColor }):Play()
    Tw:Create(icn, tT, { ImageColor3 = v and CONFIG.IconActiveColor or CONFIG.IconColor }):Play()
    icn.Image = v and icOn or icOff
    shn()
end

-- Keyboard shortcut
local keybindConn
keybindConn = UIS.InputBegan:Connect(function(input, processed)
    if processed then return end
    if input.KeyCode == CONFIG.CustomKeybind then
        apply(not on)
    end
end)

btn.Activated:Connect(function()
    apply(not on)
end)

-- Settings button functionality
settingsBtn.Activated:Connect(function()
    -- Placeholder for settings menu
    print("Settings button clicked - would open settings menu here")
end)

-- Reapply shift lock when character changes
plr.CharacterAdded:Connect(function()
    reapply(on)
end)

-- Reapply shift lock when camera changes
local lastCam = Wk.CurrentCamera
Wk:GetPropertyChangedSignal("CurrentCamera"):Connect(function()
    local c = Wk.CurrentCamera
    if c ~= lastCam then
        lastCam = c
        reapply(on)
    end
end)

-- Add a notification when the UI loads
task.spawn(function()
    local notification = Instance.new("Frame")
    notification.Name = "Notification"
    notification.Size = UDim2.fromOffset(220, 44)  -- Increased size
    notification.Position = UDim2.new(0.5, -110, 0, 10)  -- Adjusted position
    notification.AnchorPoint = Vector2.new(0.5, 0)
    notification.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
    notification.BackgroundTransparency = 0.8
    notification.ZIndex = 10002
    
    local notifCorner = Instance.new("UICorner")
    notifCorner.CornerRadius = UDim.new(0, 8)
    notifCorner.Parent = notification
    
    local notifStroke = Instance.new("UIStroke")
    notifStroke.Thickness = 1
    notifStroke.Color = Color3.fromRGB(80, 80, 90)
    notifStroke.Transparency = 0.5
    notifStroke.Parent = notification
    
    local notifText = Instance.new("TextLabel")
    notifText.Size = UDim2.fromScale(1, 1)
    notifText.BackgroundTransparency = 1
    notifText.Text = "ShiftLock UI Loaded (Press " .. tostring(CONFIG.CustomKeybind) .. ")"
    notifText.TextColor3 = Color3.fromRGB(220, 220, 220)
    notifText.TextSize = 16  -- Increased from 14
    notifText.Font = Enum.Font.Gotham
    notifText.Parent = notification
    
    notification.Parent = gui
    
    -- Animate notification
    Tw:Create(notification, TweenInfo.new(0.3), {BackgroundTransparency = 0.2}):Play()
    task.wait(3)
    Tw:Create(notification, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
    task.wait(0.5)
    notification:Destroy()
end)

-- Function to remove UI (alternative to close button)
local function removeUI()
    if keybindConn then keybindConn:Disconnect() end
    if autoHideConn then autoHideConn:Disconnect() end
    if on then apply(false) end
    
    if gui then
        Tw:Create(sc, TweenInfo.new(0.18, Enum.EasingStyle.Back, Enum.EasingDirection.In), { Scale = 0.8 }):Play()
        Tw:Create(btn, TweenInfo.new(0.18, Enum.EasingStyle.Sine, Enum.EasingDirection.In), { BackgroundTransparency = 1 }):Play()
        Tw:Create(strk, TweenInfo.new(0.12), { Transparency = 1 }):Play()
        task.delay(0.2, function()
            if gui then
                gui:Destroy()
            end
        end)
    end
end

-- Example: Remove UI with a console command
game:GetService("StarterGui"):SetCore("ChatMakeSystemMessage", {
    Text = "Type '/shiftlock remove' to remove the UI",
    Color = Color3.fromRGB(0, 162, 255),
    Font = Enum.Font.Gotham,
    FontSize = Enum.FontSize.Size18
})

local chatConnection
chatConnection = game:GetService("Players").LocalPlayer.Chatted:Connect(function(message)
    if string.lower(message) == "/shiftlock remove" then
        removeUI()
        chatConnection:Disconnect()
    end
end)
